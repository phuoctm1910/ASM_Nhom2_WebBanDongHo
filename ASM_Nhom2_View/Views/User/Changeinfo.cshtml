@model ASM_Nhom2_View.Data.User
@{
    ViewData["Title"] = "Edit";
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <title>Title</title>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport"
          content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <!-- Bootstrap CSS v5.2.1 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
          crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/register.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

</head>
<body style="background-image: url(/images/background-login.jpg)">
    <div class="container" style="margin-top: 200px;">
        <div>
            <a class="backHome" style="color:" asp-controller="Home" asp-action="Index"> <i class="fa-solid fa-house"></i> Trở về trang chủ</a>
        </div>
        <h1>Thay Đổi Thông Tin</h1>

        <div class="social-login">

        </div>

        <form method="post" asp-action="Changeinfo" enctype="multipart/form-data">
            <div class="input-group">
                <div class="input-group">
                    <span style="height: 200px; width: 200px;">
                        <img id="preview" src="@Url.Content("~/uploads/" + Model.Image)" class="" style="height: 200px; width: 200px; margin: 0 auto;"></i>
                    </span>
                </div>
                <label class="col-sm-4 col-form-label">Cập nhật ảnh đại diện:</label>
                <div class="col-sm-8">

                    <input asp-for="Image" type="file" alt="Chọn ảnh" name="file" class="form-control" id="file" required="">


                </div>
            </div>
            <div class="input-group">
                <label for="UserName">Tài Khoản:</label>
                @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "rounded-4" } })
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <label for="FullName">Họ và Tên:</label>
                <input asp-for="FullName" class="form-control" required pattern="[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂÂÊÔưăâêô\s]+" title="Chỉ được điền tên tiếng Việt và dấu cách" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="input-group">
                <label for="PhoneNumber">Số điện thoại:</label>
                @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "rounded-4" } })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <label for="Email">Email:</label>
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "rounded-4" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
            <div class="input-group">
                <label for="Gender" class="form-label">Giới tính:</label>

                <div class="input-group">
                    @Html.DropDownListFor(m => m.Gender, new SelectList(new List<SelectListItem>
                            {
                    new SelectListItem { Text = "Select Gender", Value = "" },
                    new SelectListItem { Text = "Nam", Value = "true" },
                    new SelectListItem { Text = "Nữ", Value = "false" }
                    }, "Value", "Text"), new { @class = "form-select rounded-4" })
                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group">
                <label for="BirthDate">Năm Sinh:</label>
                @Html.EditorFor(m => m.BirthDate, new { htmlAttributes = new { @class = "rounded-4", @type = "date" } })
                @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
            </div>



            <button class="Changeinfo" type="submit">Lưu thông tin</button>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </form>
    </div>
    <script>document.addEventListener('DOMContentLoaded', function () {
            const fileInput = document.getElementById('file');
            const previewImg = document.getElementById('preview');
            const defaultIcon = document.getElementById('defaultIcon');

            // Check if the current image is default or not
            const initialImageSrc = previewImg.src;
            if (!initialImageSrc || initialImageSrc.endsWith("default-image-path")) {
                previewImg.style.display = 'none';
                defaultIcon.style.display = 'block';
            }

            fileInput.addEventListener('change', function (event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImg.src = e.target.result;
                        previewImg.style.display = 'block';
                        defaultIcon.style.display = 'none';
                    }
                    reader.readAsDataURL(file);
                }
            });
        });</script>

    <script>document.getElementById('file').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
document.getElementById('preview').src = e.target.result;
                }
                reader.readAsDataURL(file);

        });</script>
    <script>function previewImage(event) {
            const input = event.target;
            const reader = new FileReader();
            reader.onload = function () {
                const dataURL = reader.result;
                const output = document.getElementById('imagePreview');
                output.src = dataURL;
            };
            reader.readAsDataURL(input.files[0]);
        }</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.8/umd/popper.min.js" integrity="sha512-TPh2Oxlg1zp+kz3nFA0C5vVC6leG/6mm1z9+mA81MI5eaUVqasPLO8Cuk4gMF4gUfP5etR73rgU/8PNMsSesoQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
            integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
            crossorigin="anonymous"></script>
</body>
</html>